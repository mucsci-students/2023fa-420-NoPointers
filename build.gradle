
plugins {
    id 'java'
    id 'application'
    id 'java-library'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'com.github.johnrengelman.shadow' version "7.1.2"

}
run
        {
            standardInput = System.in


        }

shadowJar {
    manifest {
        attributes 'Main-Class': 'nopointers.Main'
    }

    baseName = 'UML'
}

jar {
    manifest {
        attributes(

                'Main-Class': 'nopointers.Main'
        )
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

group 'com.example'
version '1.0.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}



sourceCompatibility = '17'
targetCompatibility = '17'


application {
    mainModule = 'nopointers'
    mainClass = 'nopointers.Main'
}

javafx {
    version = "21"
    modules = [ 'javafx.controls' , 'javafx.fxml']
}

dependencies {

    implementation (group: 'org.openjfx', name: 'javafx-controls', version: '22-ea+11')
            {
                exclude group: 'org.hamcrest', module: 'hamcrest-core'
                exclude group: 'org.jline'
            }
    implementation('org.xerial:sqlite-jdbc:3.43.0.0')
            {
                exclude group: 'org.hamcrest', module: 'hamcrest-core'
            }
    implementation('com.github.cliftonlabs:json-simple:4.0.1')
            {
                exclude group: 'org.hamcrest', module: 'hamcrest-core'
                exclude group: 'org.jline'
            }
    implementation ('org.json:json:20230227')
            {
                exclude group: 'org.hamcrest', module: 'hamcrest-core'
            }

    implementation (group: 'org.jline', name: 'jline', version: '3.21.0')


    implementation (group: 'org.fusesource.jansi', name: 'jansi', version: '2.4.0')
    {

    }





    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    implementation("com.googlecode.json-simple:json-simple:1.1.1")
            {
                exclude group: 'org.hamcrest', module: 'hamcrest-core'
                exclude group: 'org.jline'
            }




    implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
    implementation 'io.github.palexdev:materialfx:11.16.1'
    implementation 'com.google.code.gson:gson:2.10.1'
}

test {
    useJUnitPlatform()}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

task shell(dependsOn: 'testClasses', type: JavaExec) {
    group = 'help'
    description 'Runs an interactive shell with all runtime dependencies. "Use with gradle -q shell".'
    standardInput = System.in
    main = 'nopointers.Main' 
    // using Main directly has ansi issues (some keyboard keys not working)
    // main = 'org.codehaus.groovy.tools.shell.Main'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = []
    // workingDir =
    // standardOutput = System.out
    // stops after eval, not useful now (maybe will change with Groovy >= 2.3.2)
    // args = ["load $rootDir/integration-test/src/main/groovy/GroovyshStartup.groovy"]

}

jlinkZip {
    group = 'distribution'
}